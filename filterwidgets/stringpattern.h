/* ========================================================================= */
/* ------------------------------------------------------------------------- */
/*!
\file         stringpattern.h
\date         January 2017
\author       Nicu Tofan

\brief        Contains the definition for StringPattern class.

*//*

 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 Please read COPYING and README files in root folder
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/
/* ------------------------------------------------------------------------- */
/* ========================================================================= */
#ifndef FILTERWIDGET_GUI_STRINGPATTERN_H
#define FILTERWIDGET_GUI_STRINGPATTERN_H
//
//
//
//
/*  INCLUDES    ------------------------------------------------------------ */

#include <dbview/dbview-config.h>

#include <QWidget>

/*  INCLUDES    ============================================================ */
//
//
//
//
/*  DEFINITIONS    --------------------------------------------------------- */

namespace Ui {
class StringPattern;
}

/*  DEFINITIONS    ========================================================= */
//
//
//
//
/*  CLASS    --------------------------------------------------------------- */
namespace filterwidget {
namespace gui {

//! Shows a widget that allows selecting a string pattern.
class DBVIEW_EXPORT StringPattern : public QWidget {
    Q_OBJECT

    //
    //
    //
    //
    /*  DEFINITIONS    ----------------------------------------------------- */

    Q_PROPERTY(QRegExp::PatternSyntax syntax READ syntax WRITE setSyntax)
    Q_PROPERTY(QString pattern READ patternString WRITE setPatternString)
    Q_PROPERTY(bool inclusive READ inclusive WRITE setInclusive)

    /*  DEFINITIONS    ===================================================== */
    //
    //
    //
    //
    /*  DATA    ------------------------------------------------------------ */

private:

    Ui::StringPattern *ui; /**< automatically generated by Qt from the .ui file */

    /*  DATA    ============================================================ */
    //
    //
    //
    //
    /*  FUNCTIONS    ------------------------------------------------------- */
public:

    explicit StringPattern (
            QWidget *parent = NULL);

    ~StringPattern();

    QRegExp::PatternSyntax
    syntax () const;

    QString
    patternString () const;

    QRegExp
    regex () const;

    Qt::CaseSensitivity
    caseSensitivity() const;


    bool
    inclusive () const;

    void
    setSyntax (
            QRegExp::PatternSyntax value);

    void
    setPatternString (
            const QString & value);

    void
    setRegex (
            const QRegExp & value);

    void
    setCaseSensitivity (
            Qt::CaseSensitivity cs);

    void
    setInclusive (
            bool value);


private:

    QRegExp::PatternSyntax selectionToPattern(int index) const;
    int patternToSelection(QRegExp::PatternSyntax value) const;

    /*  FUNCTIONS    ======================================================= */
    //
    //
    //
    //

}; /* class StringPattern */
} // namespace gui
} // namespace filterwidget

/*  CLASS    =============================================================== */
//
//
//
//


#endif // FILTERWIDGET_GUI_STRINGPATTERN_H
/* ------------------------------------------------------------------------- */
/* ========================================================================= */
